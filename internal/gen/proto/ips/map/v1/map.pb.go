// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: ips/map/v1/map.proto

package mapv1

import (
	v1 "github.com/RyuChk/ips-map-service/internal/gen/proto/ips/shared/user/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FloorDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Floor       int32  `protobuf:"varint,3,opt,name=floor,proto3" json:"floor,omitempty"`
	Building    string `protobuf:"bytes,4,opt,name=building,proto3" json:"building,omitempty"`
	Symbol      string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	IsAdmin     bool   `protobuf:"varint,6,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *FloorDetail) Reset() {
	*x = FloorDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloorDetail) ProtoMessage() {}

func (x *FloorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloorDetail.ProtoReflect.Descriptor instead.
func (*FloorDetail) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{0}
}

func (x *FloorDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FloorDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FloorDetail) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *FloorDetail) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *FloorDetail) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *FloorDetail) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type Building struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	OriginLat   float64        `protobuf:"fixed64,3,opt,name=origin_lat,json=originLat,proto3" json:"origin_lat,omitempty"`
	OriginLong  float64        `protobuf:"fixed64,4,opt,name=origin_long,json=originLong,proto3" json:"origin_long,omitempty"`
	Floors      []*FloorDetail `protobuf:"bytes,5,rep,name=floors,proto3" json:"floors,omitempty"`
	IsAdmin     bool           `protobuf:"varint,6,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *Building) Reset() {
	*x = Building{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Building) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Building) ProtoMessage() {}

func (x *Building) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Building.ProtoReflect.Descriptor instead.
func (*Building) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{1}
}

func (x *Building) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Building) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Building) GetOriginLat() float64 {
	if x != nil {
		return x.OriginLat
	}
	return 0
}

func (x *Building) GetOriginLong() float64 {
	if x != nil {
		return x.OriginLong
	}
	return 0
}

func (x *Building) GetFloors() []*FloorDetail {
	if x != nil {
		return x.Floors
	}
	return nil
}

func (x *Building) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type RoomDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId      string  `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Latitude    float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *RoomDetail) Reset() {
	*x = RoomDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomDetail) ProtoMessage() {}

func (x *RoomDetail) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomDetail.ProtoReflect.Descriptor instead.
func (*RoomDetail) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{2}
}

func (x *RoomDetail) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RoomDetail) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *RoomDetail) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type AddFloorDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Building string        `protobuf:"bytes,1,opt,name=building,proto3" json:"building,omitempty"`
	Floor    int32         `protobuf:"varint,2,opt,name=floor,proto3" json:"floor,omitempty"`
	Rooms    []*RoomDetail `protobuf:"bytes,3,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *AddFloorDetailRequest) Reset() {
	*x = AddFloorDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFloorDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFloorDetailRequest) ProtoMessage() {}

func (x *AddFloorDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFloorDetailRequest.ProtoReflect.Descriptor instead.
func (*AddFloorDetailRequest) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{3}
}

func (x *AddFloorDetailRequest) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *AddFloorDetailRequest) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *AddFloorDetailRequest) GetRooms() []*RoomDetail {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type AddFloorDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Building string        `protobuf:"bytes,1,opt,name=building,proto3" json:"building,omitempty"`
	Floor    int32         `protobuf:"varint,2,opt,name=floor,proto3" json:"floor,omitempty"`
	Rooms    []*RoomDetail `protobuf:"bytes,3,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *AddFloorDetailResponse) Reset() {
	*x = AddFloorDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFloorDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFloorDetailResponse) ProtoMessage() {}

func (x *AddFloorDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFloorDetailResponse.ProtoReflect.Descriptor instead.
func (*AddFloorDetailResponse) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{4}
}

func (x *AddFloorDetailResponse) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *AddFloorDetailResponse) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *AddFloorDetailResponse) GetRooms() []*RoomDetail {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type AddBuildingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	OriginLat   float64 `protobuf:"fixed64,3,opt,name=origin_lat,json=originLat,proto3" json:"origin_lat,omitempty"`
	OriginLong  float64 `protobuf:"fixed64,4,opt,name=origin_long,json=originLong,proto3" json:"origin_long,omitempty"`
}

func (x *AddBuildingRequest) Reset() {
	*x = AddBuildingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBuildingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBuildingRequest) ProtoMessage() {}

func (x *AddBuildingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBuildingRequest.ProtoReflect.Descriptor instead.
func (*AddBuildingRequest) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{5}
}

func (x *AddBuildingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddBuildingRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddBuildingRequest) GetOriginLat() float64 {
	if x != nil {
		return x.OriginLat
	}
	return 0
}

func (x *AddBuildingRequest) GetOriginLong() float64 {
	if x != nil {
		return x.OriginLong
	}
	return 0
}

type AddBuildingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	OriginLat   float64 `protobuf:"fixed64,3,opt,name=origin_lat,json=originLat,proto3" json:"origin_lat,omitempty"`
	OriginLong  float64 `protobuf:"fixed64,4,opt,name=origin_long,json=originLong,proto3" json:"origin_long,omitempty"`
}

func (x *AddBuildingResponse) Reset() {
	*x = AddBuildingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBuildingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBuildingResponse) ProtoMessage() {}

func (x *AddBuildingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBuildingResponse.ProtoReflect.Descriptor instead.
func (*AddBuildingResponse) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{6}
}

func (x *AddBuildingResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddBuildingResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddBuildingResponse) GetOriginLat() float64 {
	if x != nil {
		return x.OriginLat
	}
	return 0
}

func (x *AddBuildingResponse) GetOriginLong() float64 {
	if x != nil {
		return x.OriginLong
	}
	return 0
}

type GetBuildingInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Building string  `protobuf:"bytes,1,opt,name=building,proto3" json:"building,omitempty"`
	Role     v1.Role `protobuf:"varint,2,opt,name=role,proto3,enum=ips.shared.user.v1.Role" json:"role,omitempty"`
}

func (x *GetBuildingInfoRequest) Reset() {
	*x = GetBuildingInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuildingInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildingInfoRequest) ProtoMessage() {}

func (x *GetBuildingInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildingInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBuildingInfoRequest) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{7}
}

func (x *GetBuildingInfoRequest) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *GetBuildingInfoRequest) GetRole() v1.Role {
	if x != nil {
		return x.Role
	}
	return v1.Role(0)
}

type GetBuildingInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	OriginLat   float64        `protobuf:"fixed64,3,opt,name=origin_lat,json=originLat,proto3" json:"origin_lat,omitempty"`
	OriginLong  float64        `protobuf:"fixed64,4,opt,name=origin_long,json=originLong,proto3" json:"origin_long,omitempty"`
	Floors      []*FloorDetail `protobuf:"bytes,5,rep,name=floors,proto3" json:"floors,omitempty"`
	IsAdmin     bool           `protobuf:"varint,6,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *GetBuildingInfoResponse) Reset() {
	*x = GetBuildingInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuildingInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildingInfoResponse) ProtoMessage() {}

func (x *GetBuildingInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildingInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBuildingInfoResponse) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{8}
}

func (x *GetBuildingInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetBuildingInfoResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetBuildingInfoResponse) GetOriginLat() float64 {
	if x != nil {
		return x.OriginLat
	}
	return 0
}

func (x *GetBuildingInfoResponse) GetOriginLong() float64 {
	if x != nil {
		return x.OriginLong
	}
	return 0
}

func (x *GetBuildingInfoResponse) GetFloors() []*FloorDetail {
	if x != nil {
		return x.Floors
	}
	return nil
}

func (x *GetBuildingInfoResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type AddFloorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Number      int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Building    string `protobuf:"bytes,4,opt,name=building,proto3" json:"building,omitempty"`
	Symbol      string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	IsAdmin     bool   `protobuf:"varint,6,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *AddFloorRequest) Reset() {
	*x = AddFloorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFloorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFloorRequest) ProtoMessage() {}

func (x *AddFloorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFloorRequest.ProtoReflect.Descriptor instead.
func (*AddFloorRequest) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{9}
}

func (x *AddFloorRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddFloorRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddFloorRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *AddFloorRequest) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *AddFloorRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AddFloorRequest) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type AddFloorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info      *FloorDetail           `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AddFloorResponse) Reset() {
	*x = AddFloorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFloorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFloorResponse) ProtoMessage() {}

func (x *AddFloorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFloorResponse.ProtoReflect.Descriptor instead.
func (*AddFloorResponse) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{10}
}

func (x *AddFloorResponse) GetInfo() *FloorDetail {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AddFloorResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AddFloorResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetBuildingListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role v1.Role `protobuf:"varint,1,opt,name=role,proto3,enum=ips.shared.user.v1.Role" json:"role,omitempty"`
}

func (x *GetBuildingListRequest) Reset() {
	*x = GetBuildingListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuildingListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildingListRequest) ProtoMessage() {}

func (x *GetBuildingListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildingListRequest.ProtoReflect.Descriptor instead.
func (*GetBuildingListRequest) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{11}
}

func (x *GetBuildingListRequest) GetRole() v1.Role {
	if x != nil {
		return x.Role
	}
	return v1.Role(0)
}

type GetBuildingListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buildings []*Building `protobuf:"bytes,1,rep,name=buildings,proto3" json:"buildings,omitempty"`
}

func (x *GetBuildingListResponse) Reset() {
	*x = GetBuildingListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuildingListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildingListResponse) ProtoMessage() {}

func (x *GetBuildingListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildingListResponse.ProtoReflect.Descriptor instead.
func (*GetBuildingListResponse) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{12}
}

func (x *GetBuildingListResponse) GetBuildings() []*Building {
	if x != nil {
		return x.Buildings
	}
	return nil
}

type GetFloorInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FloorNumber int32   `protobuf:"varint,1,opt,name=floor_number,json=floorNumber,proto3" json:"floor_number,omitempty"`
	Building    string  `protobuf:"bytes,2,opt,name=building,proto3" json:"building,omitempty"`
	Role        v1.Role `protobuf:"varint,3,opt,name=role,proto3,enum=ips.shared.user.v1.Role" json:"role,omitempty"`
}

func (x *GetFloorInfoRequest) Reset() {
	*x = GetFloorInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFloorInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFloorInfoRequest) ProtoMessage() {}

func (x *GetFloorInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFloorInfoRequest.ProtoReflect.Descriptor instead.
func (*GetFloorInfoRequest) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{13}
}

func (x *GetFloorInfoRequest) GetFloorNumber() int32 {
	if x != nil {
		return x.FloorNumber
	}
	return 0
}

func (x *GetFloorInfoRequest) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *GetFloorInfoRequest) GetRole() v1.Role {
	if x != nil {
		return x.Role
	}
	return v1.Role(0)
}

type GetFloorInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *FloorDetail  `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Rooms []*RoomDetail `protobuf:"bytes,2,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *GetFloorInfoResponse) Reset() {
	*x = GetFloorInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ips_map_v1_map_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFloorInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFloorInfoResponse) ProtoMessage() {}

func (x *GetFloorInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ips_map_v1_map_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFloorInfoResponse.ProtoReflect.Descriptor instead.
func (*GetFloorInfoResponse) Descriptor() ([]byte, []int) {
	return file_ips_map_v1_map_proto_rawDescGZIP(), []int{14}
}

func (x *GetFloorInfoResponse) GetInfo() *FloorDetail {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetFloorInfoResponse) GetRooms() []*RoomDetail {
	if x != nil {
		return x.Rooms
	}
	return nil
}

var File_ips_map_v1_map_proto protoreflect.FileDescriptor

var file_ips_map_v1_map_proto_rawDesc = []byte{
	0x0a, 0x14, 0x69, 0x70, 0x73, 0x2f, 0x6d, 0x61, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x69, 0x70, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x0b, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0xcc, 0x01,
	0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x61, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x6e, 0x67,
	0x12, 0x2f, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x95, 0x01, 0x0a,
	0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x78, 0x0a,
	0x16, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d,
	0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6c,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x4c, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x6f,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x6e, 0x67, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x61,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x6e, 0x67, 0x22, 0x62, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x4c, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d,
	0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0xb5, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d,
	0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x46, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x70, 0x73, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2c,
	0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x32, 0x87, 0x04, 0x0a,
	0x0a, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x69, 0x70, 0x73,
	0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x70, 0x73,
	0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x1b, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x69, 0x70, 0x73,
	0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xab, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x69,
	0x70, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x4d, 0x61, 0x70, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x52, 0x79, 0x75, 0x43, 0x68, 0x6b, 0x2f, 0x69, 0x70, 0x73, 0x2d, 0x6d, 0x61, 0x70,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x70, 0x73, 0x2f,
	0x6d, 0x61, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x70, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49,
	0x4d, 0x58, 0xaa, 0x02, 0x0a, 0x49, 0x70, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x0a, 0x49, 0x70, 0x73, 0x5c, 0x4d, 0x61, 0x70, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x49,
	0x70, 0x73, 0x5c, 0x4d, 0x61, 0x70, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x49, 0x70, 0x73, 0x3a, 0x3a, 0x4d, 0x61, 0x70,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ips_map_v1_map_proto_rawDescOnce sync.Once
	file_ips_map_v1_map_proto_rawDescData = file_ips_map_v1_map_proto_rawDesc
)

func file_ips_map_v1_map_proto_rawDescGZIP() []byte {
	file_ips_map_v1_map_proto_rawDescOnce.Do(func() {
		file_ips_map_v1_map_proto_rawDescData = protoimpl.X.CompressGZIP(file_ips_map_v1_map_proto_rawDescData)
	})
	return file_ips_map_v1_map_proto_rawDescData
}

var file_ips_map_v1_map_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_ips_map_v1_map_proto_goTypes = []interface{}{
	(*FloorDetail)(nil),             // 0: ips.map.v1.FloorDetail
	(*Building)(nil),                // 1: ips.map.v1.Building
	(*RoomDetail)(nil),              // 2: ips.map.v1.RoomDetail
	(*AddFloorDetailRequest)(nil),   // 3: ips.map.v1.AddFloorDetailRequest
	(*AddFloorDetailResponse)(nil),  // 4: ips.map.v1.AddFloorDetailResponse
	(*AddBuildingRequest)(nil),      // 5: ips.map.v1.AddBuildingRequest
	(*AddBuildingResponse)(nil),     // 6: ips.map.v1.AddBuildingResponse
	(*GetBuildingInfoRequest)(nil),  // 7: ips.map.v1.GetBuildingInfoRequest
	(*GetBuildingInfoResponse)(nil), // 8: ips.map.v1.GetBuildingInfoResponse
	(*AddFloorRequest)(nil),         // 9: ips.map.v1.AddFloorRequest
	(*AddFloorResponse)(nil),        // 10: ips.map.v1.AddFloorResponse
	(*GetBuildingListRequest)(nil),  // 11: ips.map.v1.GetBuildingListRequest
	(*GetBuildingListResponse)(nil), // 12: ips.map.v1.GetBuildingListResponse
	(*GetFloorInfoRequest)(nil),     // 13: ips.map.v1.GetFloorInfoRequest
	(*GetFloorInfoResponse)(nil),    // 14: ips.map.v1.GetFloorInfoResponse
	(v1.Role)(0),                    // 15: ips.shared.user.v1.Role
	(*timestamppb.Timestamp)(nil),   // 16: google.protobuf.Timestamp
}
var file_ips_map_v1_map_proto_depIdxs = []int32{
	0,  // 0: ips.map.v1.Building.floors:type_name -> ips.map.v1.FloorDetail
	2,  // 1: ips.map.v1.AddFloorDetailRequest.rooms:type_name -> ips.map.v1.RoomDetail
	2,  // 2: ips.map.v1.AddFloorDetailResponse.rooms:type_name -> ips.map.v1.RoomDetail
	15, // 3: ips.map.v1.GetBuildingInfoRequest.role:type_name -> ips.shared.user.v1.Role
	0,  // 4: ips.map.v1.GetBuildingInfoResponse.floors:type_name -> ips.map.v1.FloorDetail
	0,  // 5: ips.map.v1.AddFloorResponse.info:type_name -> ips.map.v1.FloorDetail
	16, // 6: ips.map.v1.AddFloorResponse.created_at:type_name -> google.protobuf.Timestamp
	16, // 7: ips.map.v1.AddFloorResponse.updated_at:type_name -> google.protobuf.Timestamp
	15, // 8: ips.map.v1.GetBuildingListRequest.role:type_name -> ips.shared.user.v1.Role
	1,  // 9: ips.map.v1.GetBuildingListResponse.buildings:type_name -> ips.map.v1.Building
	15, // 10: ips.map.v1.GetFloorInfoRequest.role:type_name -> ips.shared.user.v1.Role
	0,  // 11: ips.map.v1.GetFloorInfoResponse.info:type_name -> ips.map.v1.FloorDetail
	2,  // 12: ips.map.v1.GetFloorInfoResponse.rooms:type_name -> ips.map.v1.RoomDetail
	5,  // 13: ips.map.v1.MapService.AddBuilding:input_type -> ips.map.v1.AddBuildingRequest
	9,  // 14: ips.map.v1.MapService.AddFloor:input_type -> ips.map.v1.AddFloorRequest
	3,  // 15: ips.map.v1.MapService.AddFloorDetail:input_type -> ips.map.v1.AddFloorDetailRequest
	11, // 16: ips.map.v1.MapService.GetBuildingList:input_type -> ips.map.v1.GetBuildingListRequest
	7,  // 17: ips.map.v1.MapService.GetBuildingInfo:input_type -> ips.map.v1.GetBuildingInfoRequest
	13, // 18: ips.map.v1.MapService.GetFloorInfo:input_type -> ips.map.v1.GetFloorInfoRequest
	6,  // 19: ips.map.v1.MapService.AddBuilding:output_type -> ips.map.v1.AddBuildingResponse
	10, // 20: ips.map.v1.MapService.AddFloor:output_type -> ips.map.v1.AddFloorResponse
	4,  // 21: ips.map.v1.MapService.AddFloorDetail:output_type -> ips.map.v1.AddFloorDetailResponse
	12, // 22: ips.map.v1.MapService.GetBuildingList:output_type -> ips.map.v1.GetBuildingListResponse
	8,  // 23: ips.map.v1.MapService.GetBuildingInfo:output_type -> ips.map.v1.GetBuildingInfoResponse
	14, // 24: ips.map.v1.MapService.GetFloorInfo:output_type -> ips.map.v1.GetFloorInfoResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_ips_map_v1_map_proto_init() }
func file_ips_map_v1_map_proto_init() {
	if File_ips_map_v1_map_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ips_map_v1_map_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloorDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Building); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFloorDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFloorDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBuildingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBuildingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuildingInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuildingInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFloorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFloorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuildingListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuildingListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFloorInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ips_map_v1_map_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFloorInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ips_map_v1_map_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ips_map_v1_map_proto_goTypes,
		DependencyIndexes: file_ips_map_v1_map_proto_depIdxs,
		MessageInfos:      file_ips_map_v1_map_proto_msgTypes,
	}.Build()
	File_ips_map_v1_map_proto = out.File
	file_ips_map_v1_map_proto_rawDesc = nil
	file_ips_map_v1_map_proto_goTypes = nil
	file_ips_map_v1_map_proto_depIdxs = nil
}
