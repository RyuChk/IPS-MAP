// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: ips/map/v1/map.proto

package mapv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MapService_AddBuilding_FullMethodName     = "/ips.map.v1.MapService/AddBuilding"
	MapService_AddFloor_FullMethodName        = "/ips.map.v1.MapService/AddFloor"
	MapService_AddFloorDetail_FullMethodName  = "/ips.map.v1.MapService/AddFloorDetail"
	MapService_GetBuildingList_FullMethodName = "/ips.map.v1.MapService/GetBuildingList"
	MapService_GetBuildingInfo_FullMethodName = "/ips.map.v1.MapService/GetBuildingInfo"
	MapService_GetFloorInfo_FullMethodName    = "/ips.map.v1.MapService/GetFloorInfo"
)

// MapServiceClient is the client API for MapService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MapServiceClient interface {
	AddBuilding(ctx context.Context, in *AddBuildingRequest, opts ...grpc.CallOption) (*AddBuildingResponse, error)
	AddFloor(ctx context.Context, in *AddFloorRequest, opts ...grpc.CallOption) (*AddFloorResponse, error)
	AddFloorDetail(ctx context.Context, in *AddFloorDetailRequest, opts ...grpc.CallOption) (*AddFloorDetailResponse, error)
	GetBuildingList(ctx context.Context, in *GetBuildingListRequest, opts ...grpc.CallOption) (*GetBuildingListResponse, error)
	GetBuildingInfo(ctx context.Context, in *GetBuildingInfoRequest, opts ...grpc.CallOption) (*GetBuildingInfoResponse, error)
	GetFloorInfo(ctx context.Context, in *GetFloorInfoRequest, opts ...grpc.CallOption) (*GetFloorInfoResponse, error)
}

type mapServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMapServiceClient(cc grpc.ClientConnInterface) MapServiceClient {
	return &mapServiceClient{cc}
}

func (c *mapServiceClient) AddBuilding(ctx context.Context, in *AddBuildingRequest, opts ...grpc.CallOption) (*AddBuildingResponse, error) {
	out := new(AddBuildingResponse)
	err := c.cc.Invoke(ctx, MapService_AddBuilding_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapServiceClient) AddFloor(ctx context.Context, in *AddFloorRequest, opts ...grpc.CallOption) (*AddFloorResponse, error) {
	out := new(AddFloorResponse)
	err := c.cc.Invoke(ctx, MapService_AddFloor_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapServiceClient) AddFloorDetail(ctx context.Context, in *AddFloorDetailRequest, opts ...grpc.CallOption) (*AddFloorDetailResponse, error) {
	out := new(AddFloorDetailResponse)
	err := c.cc.Invoke(ctx, MapService_AddFloorDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapServiceClient) GetBuildingList(ctx context.Context, in *GetBuildingListRequest, opts ...grpc.CallOption) (*GetBuildingListResponse, error) {
	out := new(GetBuildingListResponse)
	err := c.cc.Invoke(ctx, MapService_GetBuildingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapServiceClient) GetBuildingInfo(ctx context.Context, in *GetBuildingInfoRequest, opts ...grpc.CallOption) (*GetBuildingInfoResponse, error) {
	out := new(GetBuildingInfoResponse)
	err := c.cc.Invoke(ctx, MapService_GetBuildingInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapServiceClient) GetFloorInfo(ctx context.Context, in *GetFloorInfoRequest, opts ...grpc.CallOption) (*GetFloorInfoResponse, error) {
	out := new(GetFloorInfoResponse)
	err := c.cc.Invoke(ctx, MapService_GetFloorInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MapServiceServer is the server API for MapService service.
// All implementations must embed UnimplementedMapServiceServer
// for forward compatibility
type MapServiceServer interface {
	AddBuilding(context.Context, *AddBuildingRequest) (*AddBuildingResponse, error)
	AddFloor(context.Context, *AddFloorRequest) (*AddFloorResponse, error)
	AddFloorDetail(context.Context, *AddFloorDetailRequest) (*AddFloorDetailResponse, error)
	GetBuildingList(context.Context, *GetBuildingListRequest) (*GetBuildingListResponse, error)
	GetBuildingInfo(context.Context, *GetBuildingInfoRequest) (*GetBuildingInfoResponse, error)
	GetFloorInfo(context.Context, *GetFloorInfoRequest) (*GetFloorInfoResponse, error)
	mustEmbedUnimplementedMapServiceServer()
}

// UnimplementedMapServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMapServiceServer struct {
}

func (UnimplementedMapServiceServer) AddBuilding(context.Context, *AddBuildingRequest) (*AddBuildingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBuilding not implemented")
}
func (UnimplementedMapServiceServer) AddFloor(context.Context, *AddFloorRequest) (*AddFloorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFloor not implemented")
}
func (UnimplementedMapServiceServer) AddFloorDetail(context.Context, *AddFloorDetailRequest) (*AddFloorDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFloorDetail not implemented")
}
func (UnimplementedMapServiceServer) GetBuildingList(context.Context, *GetBuildingListRequest) (*GetBuildingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuildingList not implemented")
}
func (UnimplementedMapServiceServer) GetBuildingInfo(context.Context, *GetBuildingInfoRequest) (*GetBuildingInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuildingInfo not implemented")
}
func (UnimplementedMapServiceServer) GetFloorInfo(context.Context, *GetFloorInfoRequest) (*GetFloorInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFloorInfo not implemented")
}
func (UnimplementedMapServiceServer) mustEmbedUnimplementedMapServiceServer() {}

// UnsafeMapServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MapServiceServer will
// result in compilation errors.
type UnsafeMapServiceServer interface {
	mustEmbedUnimplementedMapServiceServer()
}

func RegisterMapServiceServer(s grpc.ServiceRegistrar, srv MapServiceServer) {
	s.RegisterService(&MapService_ServiceDesc, srv)
}

func _MapService_AddBuilding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBuildingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapServiceServer).AddBuilding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MapService_AddBuilding_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapServiceServer).AddBuilding(ctx, req.(*AddBuildingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapService_AddFloor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFloorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapServiceServer).AddFloor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MapService_AddFloor_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapServiceServer).AddFloor(ctx, req.(*AddFloorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapService_AddFloorDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFloorDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapServiceServer).AddFloorDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MapService_AddFloorDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapServiceServer).AddFloorDetail(ctx, req.(*AddFloorDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapService_GetBuildingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBuildingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapServiceServer).GetBuildingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MapService_GetBuildingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapServiceServer).GetBuildingList(ctx, req.(*GetBuildingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapService_GetBuildingInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBuildingInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapServiceServer).GetBuildingInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MapService_GetBuildingInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapServiceServer).GetBuildingInfo(ctx, req.(*GetBuildingInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapService_GetFloorInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFloorInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapServiceServer).GetFloorInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MapService_GetFloorInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapServiceServer).GetFloorInfo(ctx, req.(*GetFloorInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MapService_ServiceDesc is the grpc.ServiceDesc for MapService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MapService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ips.map.v1.MapService",
	HandlerType: (*MapServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBuilding",
			Handler:    _MapService_AddBuilding_Handler,
		},
		{
			MethodName: "AddFloor",
			Handler:    _MapService_AddFloor_Handler,
		},
		{
			MethodName: "AddFloorDetail",
			Handler:    _MapService_AddFloorDetail_Handler,
		},
		{
			MethodName: "GetBuildingList",
			Handler:    _MapService_GetBuildingList_Handler,
		},
		{
			MethodName: "GetBuildingInfo",
			Handler:    _MapService_GetBuildingInfo_Handler,
		},
		{
			MethodName: "GetFloorInfo",
			Handler:    _MapService_GetFloorInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ips/map/v1/map.proto",
}
